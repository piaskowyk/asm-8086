EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe_ -- emu8086 assembler version: 4.08  
 
[ 05.03.2019  --  08:13:55 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       assume cs:code1 ;definiuje gdzie zaczyna siêsegment kodu
[   2]        :                                       ;dw rezerwuje 2 bajty, db rezerwuje 1 bajt
[   3]        :                                       dane1 segment
[   4]    0000: 0E                                    db 14
[   5]    0001: 01 38 F5                              db 1, 56, 245
[   6]    0004: 04 01 1F 06                           dw 260, 1567
[   7]    0008: 61                                    db 'a'
[   8]    0009: 78 64 64 64 64 64 20 6E 61 70 69 73   text1 db "xddddd napis", 10, 13, "xddddddddd", "$"
                0A 0D 78 64 64 64 64 64 64 64 64 64 
                24                                  
[   9]        :                                       dane1 ends
[  10]        :                                       
[  11]        :                                       code1 segment
[  12]    0030: 90                                    start1: nop
[  13]    0031: B8 05 00                              mov ax, seg ws1 ; przypisuje adres segmentu czyli do ca³êgo bloku
[  14]    0034: 8E D0                                 mov ss, ax ; nie mo¿na przypisaæ bezpoœrednio trzeba przez akumulator
[  15]    0036: BC 20 03                              mov sp, offset ws1 ; przypisuje offset na konkretn¹ zmienn¹ w segmencie / bloku ; wierzcho³ek stosu wskazuje na ss:sp
[  16]        :                                       
[  17]    0039: BA 09 00                              mov dx, offset text1
[  18]    003C: E8 06 00                              call print1
[  19]        :                                       
[  20]    003F: B4 4C                                 end1:   mov ah, 4ch ; koniec programu i powrót do systemu
[  21]    0041: B0 00                                 mov al, 0
[  22]    0043: CD 21                                 int 21h
[  23]        :                                       
[  24]        :                                       ;==================================================================================
[  25]        :                                       
[  26]        :                                       ;paramert dx = offset
[  27]    0045: B8 00 00                              print1: mov ax, seg text1
[  28]    0048: 8E D8                                 mov ds, ax ; nie mo¿na bezpoœrednio przypisaæ do ds, trzeba za poœrednicstwem np ax
[  29]    004A: B4 09                                 mov ah, 9h; wypisz tekst z pod ds:dx
[  30]    004C: CD 21                                 int 21h
[  31]    004E: C3                                    ret
[  32]        :                                       
[  33]        :                                       code1 ends
[  34]        :                                       
[  35]        :                                       stos1 segment stack
[  36]    0050: 00 00 00 00 00 00 00 00 00 00 00 00   dw  400 dup(?) ;dowolna wartoœæ domyœlna
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00             
[  37]    0370: 00 00                                 ws1 dw ?
[  38]        :                                       stos1 ends
[  39]        :                                       
[  40]        :                                       end start1
[  41]        :                                       
[  42]        :                                       ;tetowa³ to ktoœ ?
[  43]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 72      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 03      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 02      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 05      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 22      -   SP - stack pointer (l.byte)
0011: 03      -   SP - stack pointer (h.byte)
0012: 5B      -   check sum (l.byte)
0013: E5      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 03      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 02      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 03      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022: 16      -   relocation table - offset inside segment (l.byte)
0023: 00      -   relocation table - offset inside segment (h.byte)
0024: 03      -   relocation table - segment anchor (l.byte)
0025: 00      -   relocation table - segment anchor (h.byte)
0026 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
